package subgoal;

/**
 * *************************************************************
 *
 * Subgoal Data Preparation Written by Dr. Andrew Kwok-Fai LUI On 28/2/2020
 *
 * Copyright Andrew Kwok-Fai LUI 2020
 *
 */
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;

public class LabelEditor extends javax.swing.JPanel {

    private List<Label> labelList = new ArrayList();
    private Label selectedLabel = null;
    private boolean markingRow = false;
    private boolean markingColumn = false;

    private List<Label> clipboard = new ArrayList();

    public LabelEditor() {
        initComponents();
        DefaultListModel model = new DefaultListModel();
        jList1.setModel(model);
        setLabelInfoPanelEnabled(false);
    }

    public void setLabelList(List labelList) {
        this.labelList = labelList;
        refreshLabelJList();
        selectedLabel = null;
        refreshLabelInfoJPanel(selectedLabel);
        // reset the range marking buttons
        markingRow = markingColumn = false;
        updateRowMarkerButton();
        updateColumnMarkerButton();
    }

    void refreshLabelJList() {
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        model.removeAllElements();
        for (Label m : labelList) {
            model.addElement(m);
        }
    }

    public boolean isMarkingRow() {
        return markingRow;
    }

    public boolean isMarkingColumn() {
        return markingColumn;
    }

    public void setRowRange(String rowrange) {
        if (selectedLabel == null) {
            return;
        }
        selectedLabel.put("RowRange", rowrange);
        refreshLabelInfoJPanel(selectedLabel);
    }

    public void setColRange(String colrange) {
        if (selectedLabel == null) {
            return;
        }
        selectedLabel.put("ColRange", colrange);
        refreshLabelInfoJPanel(selectedLabel);
    }

    public List<Label> getSelectedLabels() {
        List<Label> result = new ArrayList();
        int indices[] = jList1.getSelectedIndices();
        for (int index : indices) {
            result.add(labelList.get(index));
        }
        return result;
    }

    void copyToLabel(HashMap label) {
        label.put("Label", jTextField3.getText());
        label.put("RowRange", jTextField1.getText());
        label.put("ColRange", jTextField2.getText());
        label.put("Desc", jTextArea1.getText());
        label.put("Type", jComboBox1.getSelectedItem().toString());
    }

    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        jButton1.setEnabled(enabled);
        jButton2.setEnabled(enabled);
        jButton5.setEnabled(enabled);
        jButton6.setEnabled(enabled);
        jButton7.setEnabled(enabled);
        jButton8.setEnabled(enabled);        
    }

    void setLabelInfoPanelEnabled(boolean enabled) {
        jTextField3.setEnabled(enabled);
        jTextField1.setEnabled(enabled);
        jTextField2.setEnabled(enabled);
        jTextArea1.setEnabled(enabled);
        jComboBox1.setEnabled(enabled);
        jButton3.setEnabled(enabled);
        jButton4.setEnabled(enabled);
    }

    void refreshLabelInfoJPanel(HashMap label) {
        if (label == null) {
            jTextField3.setText("");
            jTextField1.setText("");
            jTextField2.setText("");
            jTextArea1.setText("");
            jComboBox1.setSelectedItem("");
            setLabelInfoPanelEnabled(false);
            return;
        }
        jTextField3.setText((String) label.getOrDefault("Label", ""));
        jTextField1.setText((String) label.getOrDefault("RowRange", ""));
        jTextField2.setText((String) label.getOrDefault("ColRange", ""));
        jTextArea1.setText((String) label.getOrDefault("Desc", ""));
        jComboBox1.setSelectedItem((String) label.getOrDefault("Type", ""));
        setLabelInfoPanelEnabled(true);
        // reset the range marking buttons
        markingRow = markingColumn = false;
        updateRowMarkerButton();
        updateColumnMarkerButton();
    }

    void updateRowMarkerButton() {
        if (markingRow) {
            jButton3.setForeground(Color.red);
        } else {
            jButton3.setForeground(Color.black);
        }
    }

    void updateColumnMarkerButton() {
        if (markingColumn) {
            jButton4.setForeground(Color.red);
        } else {
            jButton4.setForeground(Color.black);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(480, 300));
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(160, 52));
        jPanel1.setPreferredSize(new java.awt.Dimension(160, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton1.setText("New");
        jButton1.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton1.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton1.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton5.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton5.setText("Clone");
        jButton5.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton5.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton5.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton5, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton2.setText("Delete");
        jButton2.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton2.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton2.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton2, gridBagConstraints);

        jButton6.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton6.setText("Copy");
        jButton6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton6.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton6.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton6.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton6, gridBagConstraints);

        jButton7.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton7.setText("Paste");
        jButton7.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton7.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton7.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton7, gridBagConstraints);

        jButton8.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jButton8.setText("Custom");
        jButton8.setMaximumSize(new java.awt.Dimension(80, 28));
        jButton8.setMinimumSize(new java.awt.Dimension(80, 28));
        jButton8.setPreferredSize(new java.awt.Dimension(80, 28));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButton8, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(120, 132));

        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(240, 300));
        jPanel2.setPreferredSize(new java.awt.Dimension(240, 300));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField3.setBorder(javax.swing.BorderFactory.createTitledBorder("Label"));
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jTextField3, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "_generic", "_automation", "_abstraction", "_evaluation" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createTitledBorder("Type"));
        jComboBox1.setMinimumSize(new java.awt.Dimension(96, 48));
        jComboBox1.setPreferredSize(new java.awt.Dimension(96, 48));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Position"));
        jPanel4.setMinimumSize(new java.awt.Dimension(36, 120));
        jPanel4.setPreferredSize(new java.awt.Dimension(36, 120));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder("RowRange"));
        jTextField1.setPreferredSize(new java.awt.Dimension(12, 50));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jTextField1, gridBagConstraints);

        jButton3.setText("Mark");
        jButton3.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jButton3, gridBagConstraints);

        jTextField2.setBorder(javax.swing.BorderFactory.createTitledBorder("ColRange"));
        jTextField2.setPreferredSize(new java.awt.Dimension(12, 50));
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jTextField2, gridBagConstraints);

        jButton4.setText("Mark");
        jButton4.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jPanel5.add(jScrollPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JButton btn = (JButton) evt.getSource();
        if (btn.getText().equals("New")) {
            selectedLabel = new Label("New Label " + (labelList.size() + 1));
            labelList.add(selectedLabel);
            refreshLabelJList();
            jList1.setSelectedValue(selectedLabel, true);
            refreshLabelInfoJPanel(selectedLabel);
        } else if (btn.getText().equals("Clone")) {
            int indices[] = jList1.getSelectedIndices();
            if (indices.length != 1) {
                JOptionPane.showMessageDialog(this, "Select only one label to clone");
                return;
            }
            Label toCopy = (Label) labelList.get(indices[0]);
            this.selectedLabel = toCopy.copy();
            labelList.add(this.selectedLabel);
            refreshLabelJList();
            jList1.setSelectedIndex(labelList.size() - 1);
            refreshLabelInfoJPanel(this.selectedLabel);
        } else if (btn.getText().equals("Delete")) {
            int indices[] = jList1.getSelectedIndices();
            for (int i = indices.length - 1; i >= 0; i--) {
                labelList.remove(indices[i]);
            }
            refreshLabelJList();
            selectedLabel = null;
            refreshLabelInfoJPanel(selectedLabel);
        } else if (btn.getText().equals("Copy")) {
            int indices[] = jList1.getSelectedIndices();
            if (indices.length == 0) {
                JOptionPane.showMessageDialog(this, "Select at least one label to copy");
                return;
            }
            clipboard.clear();
            for (int index : indices) {
                clipboard.add(labelList.get(index));
            }
            JOptionPane.showMessageDialog(this, "Copied " + clipboard.size() + " labels");
        } else if (btn.getText().equals("Paste")) {
            if (clipboard.size() == 0) {
                JOptionPane.showMessageDialog(this, "Nothing in the clipboard");
                return;
            }
            for (Label m : clipboard) {
                Label clone = m.copy();
                String label = clone.getLabel();
                clone.setLabel("[C]" + label);
                labelList.add(clone);
            }
            refreshLabelJList();
            JOptionPane.showMessageDialog(this, "Pasted " + clipboard.size() + " labels");
            clipboard.clear();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        boolean isAdjusting = evt.getValueIsAdjusting();
        if (isAdjusting) {
            return;
        }
        JList obj = (JList) evt.getSource();
        int selected = obj.getSelectedIndex();
        if (selected < 0 || selected >= labelList.size()) {
            return;
        }
        selectedLabel = (Label) labelList.get(selected);
        refreshLabelInfoJPanel(selectedLabel);
    }//GEN-LAST:event_jList1ValueChanged

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        if (selectedLabel != null) {
            copyToLabel(selectedLabel);
            refreshLabelJList();
        }
    }//GEN-LAST:event_jTextArea1FocusLost

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (selectedLabel != null) {
            copyToLabel(selectedLabel);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Object source = evt.getSource();
        if (source == jButton3) {
            markingRow = !markingRow;
            updateRowMarkerButton();
        } else if (source == jButton4) {
            markingColumn = !markingColumn;
            updateColumnMarkerButton();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

}
